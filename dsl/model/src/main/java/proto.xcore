/**
 * Copyright 2017-2022 Plexus Interop Deutsche Bank AG
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@Ecore(nsPrefix="proto",nsURI="http://www.db.com/plexus/interop/dsl/protobuf")
@GenModel(
    bundleManifest="false",
    modelDirectory="model/build/xcore/main", 
    complianceLevel="8.0"
)

package com.db.plexus.interop.dsl.protobuf

interface NamedElement {
	String name	
}

class Proto {
	ProtoSyntax syntax
	contains ProtoElement[] elements	
}

enum ProtoSyntax {
	None,
	Proto2,
	Proto3
}

interface ProtoElement {	
}

class Package extends ProtoElement {
	String importedNamespace	
}

class Import extends ProtoElement {
	String importURI
	ImportModifier modifier
}

class Extend extends ProtoElement {
	refers Message message
	contains ExtendElement[] elements 
}

interface ExtendElement {	
}

enum ImportModifier {
	None,
	Public,
	Weak
}

class Option extends ProtoElement, MessageElement, ServiceElement, MethodElement, EnumElement, FieldElement {
	Boolean isCustom = "false"
	refers Field descriptor	
	contains Constant value
}

interface Constant {
}

class StringConstant extends Constant {
	String value
}

class BoolConstant extends Constant {
	Boolean value = "false"
}

class IntConstant extends Constant {
	Integer value
}

class EnumConstant extends Constant {
	refers EnumValue value
}

class DecimalConstant extends Constant {
	Double value
}

interface ProtoDefinition extends ProtoElement, NamedElement {	
}

interface ComplexType extends NamedElement {
}

class Message extends ComplexType, ProtoDefinition, MessageElement {
	contains MessageElement[] elements	
}

interface MessageElement {	
}

class Enum extends ComplexType, ProtoDefinition, MessageElement {	
	contains EnumElement[] elements	
}

interface EnumElement {	
}

class EnumValue extends EnumElement, NamedElement {
	Integer value
	contains Option[] options
}

class Service extends ProtoDefinition {		
	contains ServiceElement[] elements
}

interface ServiceElement {
}

class Method extends ServiceElement {	
	String name	
	contains MethodData request
	contains MethodData response
	contains MethodElement[] elements
}

class MethodData {
	refers Message message
	Boolean isStream = "false" 	
}

interface MethodElement {	
}

class Field extends MessageElement, ExtendElement {
	String name	
	Integer number
	FieldLabel label
	contains FieldTypeReference typeReference	
	contains FieldElement[] elements	
}

interface FieldElement {	
}

class DefaultFieldValue extends FieldElement {
	contains Constant value
}

class Group extends MessageElement, ExtendElement {
	String name	
	Integer number	
	FieldLabel label
	contains MessageElement[] elements
}

enum FieldLabel {
	None
	Optional,
	Required, 	
	Repeated
}

class FieldTypeReference {	
}

enum PrimitiveType
{
	DOUBLE
	FLOAT,
	INT32,
	INT64,
	UINT32,
	UINT64,
	SINT32,
	SINT64,
	FIXED32,
	FIXED64,
	SFIXED32,
	SFIXED64,
	BOOl,
	STRING,
	BYTES
}

class PrimitiveFieldType extends FieldTypeReference {
	PrimitiveType value
}

class ComplexFieldType extends FieldTypeReference {
	refers ComplexType value
}

class OneOf extends MessageElement {
	String name
	contains Field[] fields
}

class MapField extends MessageElement {
	String name
	PrimitiveType keyType 
	contains FieldTypeReference valueType
	Integer number
	contains Option[] options		
}

class Reserved extends MessageElement {
	contains ReservedFields fields	
}

interface ReservedFields {	
}

class FieldNames extends ReservedFields {
	String[] elements
}

class FieldRanges extends ReservedFields {
	contains FieldRange[] elements
}

class FieldRange {
	Integer from
	Integer to
	Boolean toUnbounded = "false"
}

class Extensions extends MessageElement {
	contains FieldRanges fields		
}